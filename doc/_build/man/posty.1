.\" Man page generated from reStructuredText.
.
.TH "POSTY" "1" "Jan 20, 2018" "2.0" "Posty"
.SH NAME
posty \- Posty Documentation
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.sp
A simple static site generator tool. It reads in a series of posts and pages
containing YAML metadata and Markdown text, and renders them as HTML.
.SH QUICKSTART
.sp
hi.
.SH CLI REFERENCE
.SH CONFIG FILE
.SH POST AND PAGE SCHEMA
.SH TEMPLATING
.SH IMPORTING FROM OTHER STATIC SITE GENERATORS
.SH DEVELOPMENT
.SH POSTY
.SS posty package
.SS Subpackages
.SS posty.renderer package
.SS Submodules
.SS posty.renderer.atom module
.INDENT 0.0
.TP
.B class posty.renderer.atom.AtomRenderer(site, output_path=\(aqbuild\(aq)
Bases: \fBposty.renderer.feed.FeedRenderer\fP
.sp
Renderer that outputs an Atom feed XML file
.INDENT 7.0
.TP
.B filename = \(aqatom.xml\(aq
.UNINDENT
.INDENT 7.0
.TP
.B output()
Output the Atom feed file
.UNINDENT
.INDENT 7.0
.TP
.B url()
Return the URL to this feed file
.UNINDENT
.UNINDENT
.SS posty.renderer.base module
.INDENT 0.0
.TP
.B class posty.renderer.base.Renderer(site, output_path=\(aqbuild\(aq)
Bases: \fBobject\fP
.sp
Base class that all renderers inherit off of. Each child class must
implement \fBrender_site()\fP with their own rendering logic.
.INDENT 7.0
.TP
.B ensure_output_path()
Ensure that the output directory \fBself.output_path\fP exists
.UNINDENT
.INDENT 7.0
.TP
.B render_site()
.UNINDENT
.UNINDENT
.SS posty.renderer.feed module
.INDENT 0.0
.TP
.B class posty.renderer.feed.FeedRenderer(site, output_path=\(aqbuild\(aq)
Bases: \fBposty.renderer.base.Renderer\fP
.sp
Base class for all feed Renderers (RSS, Atom)
.INDENT 7.0
.TP
.B output()
This method must be implemented by child classes. It gets called during
render_site to output the specific file, such as the RSS file or Atom
file
.UNINDENT
.INDENT 7.0
.TP
.B render_posts()
Add each post to the feed
.UNINDENT
.INDENT 7.0
.TP
.B render_site()
.UNINDENT
.INDENT 7.0
.TP
.B url()
Return the URL to this feed file
.UNINDENT
.UNINDENT
.SS posty.renderer.html module
.INDENT 0.0
.TP
.B class posty.renderer.html.HtmlRenderer(site, output_path=\(aqbuild\(aq)
Bases: \fBposty.renderer.base.Renderer\fP
.sp
Renderer that outputs HTML files
.INDENT 7.0
.TP
.B prepare_content()
Do a first\-pass rendering of each post and page text, treating the text
as Jinja2 templates. This lets us use basic jinja in the markdown to
be able to use filter functions like this:
.sp
\fB{{ "img/cool_pic.jpg" | media_url }}\fP
.UNINDENT
.INDENT 7.0
.TP
.B render_page(page, template_name=\(aqpage.html\(aq)
.INDENT 7.0
.TP
.B Parameters
\fBpage\fP – a Page object
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B render_post(post, template_name=\(aqpost.html\(aq)
.INDENT 7.0
.TP
.B Parameters
\fBpost\fP – a Post object
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B render_posts(posts, prefix=\(aq\(aq, template_name=\(aqposts.html\(aq)
Render a list of posts as sets of pages where each page has
\fBnum_posts_per_page\fP posts. Each page of posts will be rendered to
the path page/:page/index.html relative to the Renderer output_path
.sp
If \fBprefix\fP is given, add that will be put in between the output_path
and page path. For example if the prefix is ‘tags/foo/’ then a page
path would look like ‘tags/foo/page/:page/index.html’
.UNINDENT
.INDENT 7.0
.TP
.B render_site()
Given a Site object, render all of its components
.INDENT 7.0
.TP
.B Parameters
\fBsite\fP – a loaded Site object
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B render_site_posts()
Renders all of the multi\-post pages, N per page
.UNINDENT
.INDENT 7.0
.TP
.B render_site_tags(template_name=\(aqposts.html\(aq)
Renders all of the per\-tag multi\-post pages, N per page
.UNINDENT
.UNINDENT
.SS posty.renderer.json module
.INDENT 0.0
.TP
.B class posty.renderer.json.JsonRenderer(site, output_path=\(aqbuild\(aq)
Bases: \fBposty.renderer.base.Renderer\fP
.sp
Renderer that outputs a JSON representation of the Site to \fBsite.json\fP
within the output directory
.INDENT 7.0
.TP
.B render_site()
Render the Site to \fBsite.json\fP
.UNINDENT
.UNINDENT
.SS posty.renderer.rss module
.INDENT 0.0
.TP
.B class posty.renderer.rss.RssRenderer(site, output_path=\(aqbuild\(aq)
Bases: \fBposty.renderer.feed.FeedRenderer\fP
.sp
Renderer that outputs a RSS feed XML file
.INDENT 7.0
.TP
.B filename = \(aqrss.xml\(aq
.UNINDENT
.INDENT 7.0
.TP
.B output()
Output the RSS feed file
.UNINDENT
.INDENT 7.0
.TP
.B url()
Return the URL to this feed file
.UNINDENT
.UNINDENT
.SS posty.renderer.util module
.INDENT 0.0
.TP
.B posty.renderer.util.absolute_url_func(site)
Returns a markdown filter function that returns an absolute URL for the
given relative URL, simply concatenating config[‘base_url’] with the URL.
.UNINDENT
.INDENT 0.0
.TP
.B posty.renderer.util.markdown(text)
Returns the rendered version of the given Markdown text
.UNINDENT
.INDENT 0.0
.TP
.B posty.renderer.util.media_url_func(site)
Returns a filter function that returns a full media URL for the given file,
scoped to the given Site object.
.sp
For example, if the Site has its base_url set to ‘/foo/’ then:
img/my_picture.jpg \-> /foo/media/img/my_picture.jpg
.UNINDENT
.SS Module contents
.INDENT 0.0
.TP
.B class posty.renderer.HtmlRenderer(site, output_path=\(aqbuild\(aq)
Bases: \fBposty.renderer.base.Renderer\fP
.sp
Renderer that outputs HTML files
.INDENT 7.0
.TP
.B prepare_content()
Do a first\-pass rendering of each post and page text, treating the text
as Jinja2 templates. This lets us use basic jinja in the markdown to
be able to use filter functions like this:
.sp
\fB{{ "img/cool_pic.jpg" | media_url }}\fP
.UNINDENT
.INDENT 7.0
.TP
.B render_page(page, template_name=\(aqpage.html\(aq)
.INDENT 7.0
.TP
.B Parameters
\fBpage\fP – a Page object
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B render_post(post, template_name=\(aqpost.html\(aq)
.INDENT 7.0
.TP
.B Parameters
\fBpost\fP – a Post object
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B render_posts(posts, prefix=\(aq\(aq, template_name=\(aqposts.html\(aq)
Render a list of posts as sets of pages where each page has
\fBnum_posts_per_page\fP posts. Each page of posts will be rendered to
the path page/:page/index.html relative to the Renderer output_path
.sp
If \fBprefix\fP is given, add that will be put in between the output_path
and page path. For example if the prefix is ‘tags/foo/’ then a page
path would look like ‘tags/foo/page/:page/index.html’
.UNINDENT
.INDENT 7.0
.TP
.B render_site()
Given a Site object, render all of its components
.INDENT 7.0
.TP
.B Parameters
\fBsite\fP – a loaded Site object
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B render_site_posts()
Renders all of the multi\-post pages, N per page
.UNINDENT
.INDENT 7.0
.TP
.B render_site_tags(template_name=\(aqposts.html\(aq)
Renders all of the per\-tag multi\-post pages, N per page
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class posty.renderer.JsonRenderer(site, output_path=\(aqbuild\(aq)
Bases: \fBposty.renderer.base.Renderer\fP
.sp
Renderer that outputs a JSON representation of the Site to \fBsite.json\fP
within the output directory
.INDENT 7.0
.TP
.B render_site()
Render the Site to \fBsite.json\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class posty.renderer.RssRenderer(site, output_path=\(aqbuild\(aq)
Bases: \fBposty.renderer.feed.FeedRenderer\fP
.sp
Renderer that outputs a RSS feed XML file
.INDENT 7.0
.TP
.B filename = \(aqrss.xml\(aq
.UNINDENT
.INDENT 7.0
.TP
.B output()
Output the RSS feed file
.UNINDENT
.INDENT 7.0
.TP
.B url()
Return the URL to this feed file
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class posty.renderer.AtomRenderer(site, output_path=\(aqbuild\(aq)
Bases: \fBposty.renderer.feed.FeedRenderer\fP
.sp
Renderer that outputs an Atom feed XML file
.INDENT 7.0
.TP
.B filename = \(aqatom.xml\(aq
.UNINDENT
.INDENT 7.0
.TP
.B output()
Output the Atom feed file
.UNINDENT
.INDENT 7.0
.TP
.B url()
Return the URL to this feed file
.UNINDENT
.UNINDENT
.SS Submodules
.SS posty.cli module
.SS posty.config module
.INDENT 0.0
.TP
.B class posty.config.Config(path=\(aqconfig.yml\(aq)
Bases: \fBcollections.abc.MutableMapping\fP
.sp
Config object that gets passed around to various other objects. Loads
config from a given YAML file.
.INDENT 7.0
.TP
.B Parameters
\fBpath\fP – Path to a YAML file to read in as config
.UNINDENT
.INDENT 7.0
.TP
.B clean_config()
Validate and clean the already\-loaded config
.UNINDENT
.INDENT 7.0
.TP
.B load()
Load the YAML config from the given path, return the config object
.UNINDENT
.UNINDENT
.SS posty.exceptions module
.INDENT 0.0
.TP
.B exception posty.exceptions.InvalidConfig(config_obj, reason)
Bases: \fI\%posty.exceptions.PostyError\fP
.UNINDENT
.INDENT 0.0
.TP
.B exception posty.exceptions.InvalidObject
Bases: \fI\%posty.exceptions.PostyError\fP
.UNINDENT
.INDENT 0.0
.TP
.B exception posty.exceptions.MalformedInput
Bases: \fI\%posty.exceptions.PostyError\fP
.UNINDENT
.INDENT 0.0
.TP
.B exception posty.exceptions.PostyError
Bases: \fBRuntimeError\fP
.UNINDENT
.INDENT 0.0
.TP
.B exception posty.exceptions.UnableToImport
Bases: \fI\%posty.exceptions.PostyError\fP
.UNINDENT
.SS posty.importers module
.sp
Functions to import from various other static site generators
.INDENT 0.0
.TP
.B class posty.importers.Importer(site, src_path)
Bases: \fBposty.model.ABC\fP
.sp
Base class for all importers
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBsite\fP – Site object for the destination
.IP \(bu 2
\fBsrc_path\fP – Path to the thing to import
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B ensure_directories()
.UNINDENT
.INDENT 7.0
.TP
.B run()
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class posty.importers.Posty1Importer(site, src_path)
Bases: \fI\%posty.importers.Importer\fP
.sp
Importer to pull from a Posty 1.x site
.INDENT 7.0
.TP
.B import_media()
.UNINDENT
.INDENT 7.0
.TP
.B import_pages()
.UNINDENT
.INDENT 7.0
.TP
.B import_posts()
.UNINDENT
.INDENT 7.0
.TP
.B import_templates()
.UNINDENT
.INDENT 7.0
.TP
.B run()
.UNINDENT
.UNINDENT
.SS posty.model module
.INDENT 0.0
.TP
.B class posty.model.ABC
Bases: \fBobject\fP
.UNINDENT
.INDENT 0.0
.TP
.B class posty.model.Model(payload, config=None)
Bases: \fI\%posty.model.ABC\fP, \fBcollections.abc.MutableMapping\fP
.sp
Base class for objects representing things stored as YAML, such as a Post
or a Page
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBpayload\fP – A dict representing the backing payload for this object
.IP \(bu 2
\fBconfig\fP – A Config object
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B as_dict()
Return a true dict representation of this object, suitable for
serialization into JSON or YAML
.UNINDENT
.INDENT 7.0
.TP
.B classmethod from_yaml(file_contents, config=None)
Load an object from its YAML file representation
.UNINDENT
.INDENT 7.0
.TP
.B path_on_disk()
Returns the relative path on disk to the object, for rendering purposes
.UNINDENT
.INDENT 7.0
.TP
.B url()
Returns the URL path to this resource
.UNINDENT
.INDENT 7.0
.TP
.B validate()
This should be implemented by the child class to verify that all fields
that are expected exist on the payload, and set any that aren’t
.UNINDENT
.UNINDENT
.SS posty.page module
.INDENT 0.0
.TP
.B class posty.page.Page(payload, config=None)
Bases: \fBposty.model.Model\fP
.sp
Representation of a page
.INDENT 7.0
.TP
.B classmethod from_yaml(file_contents, config=None)
Return a Page from the given file_contents
.UNINDENT
.INDENT 7.0
.TP
.B path_on_disk()
.UNINDENT
.INDENT 7.0
.TP
.B url()
.UNINDENT
.INDENT 7.0
.TP
.B validate()
.UNINDENT
.UNINDENT
.SS posty.post module
.INDENT 0.0
.TP
.B class posty.post.Post(payload, config=None)
Bases: \fBposty.model.Model\fP
.sp
Representation of a post
.INDENT 7.0
.TP
.B classmethod from_yaml(file_contents, config=None)
Returns a Post from the given file_contents
.UNINDENT
.INDENT 7.0
.TP
.B path_on_disk()
.UNINDENT
.INDENT 7.0
.TP
.B url()
.UNINDENT
.INDENT 7.0
.TP
.B validate()
.UNINDENT
.UNINDENT
.SS posty.site module
.INDENT 0.0
.TP
.B class posty.site.Site(site_path=\(aq.\(aq, config_path=None)
Bases: \fBobject\fP
.sp
Representation of an entire site with posts and pages. This is the main
class that conrols everything.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBsite_path\fP – Path to the directory containing site content (pages, posts, templates)
.IP \(bu 2
\fBconfig_path\fP – Path to the config file, defaults to \fB$SITE_PATH/config.yml\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B config
Returns this site’s config as read from the config file
.UNINDENT
.INDENT 7.0
.TP
.B copyright
Returns a string of the copyright info, based on the configured author
and the years of the first and last post
.UNINDENT
.INDENT 7.0
.TP
.B init()
Initialize a new Posty site at the given path
.UNINDENT
.INDENT 7.0
.TP
.B load()
Load the site from files on disk into our internal representation
.UNINDENT
.INDENT 7.0
.TP
.B page(slug)
Returns a Page object by its slug
.INDENT 7.0
.TP
.B Parameters
\fBslug\fP – slug of the page to find
.TP
.B Returns
A page dict
.TP
.B Raises
\fBPostyError\fP – if no page could be found
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B post(slug)
Returns a Post object by its slug
.INDENT 7.0
.TP
.B Parameters
\fBslug\fP – slug of the post to find
.TP
.B Returns
A post dict
.TP
.B Raises
\fBPostyError\fP – if no post could be found
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B render(output_path=\(aqbuild\(aq)
Render the site with the various renderers
.INDENT 7.0
.IP \(bu 2
HTML
.IP \(bu 2
JSON
.IP \(bu 2
RSS (if \fBfeeds.rss\fP is True in the config)
.IP \(bu 2
Atom (if \fBfeeds.atom\fP is True in the config)
.UNINDENT
.UNINDENT
.UNINDENT
.SS posty.util module
.sp
Various utility functions
.INDENT 0.0
.TP
.B posty.util.bucket(_list, size)
Bucket the list \fB_list\fP into chunks of up to size \fBsize\fP
.sp
Example:
bucket([1,2,3,4,5], 2) \-> [[1,2], [3,4], [5]]
.UNINDENT
.INDENT 0.0
.TP
.B posty.util.slugify(text)
Returns a slugified version of the given \fBtext\fP
.UNINDENT
.INDENT 0.0
.TP
.B posty.util.slugify_posty1(text)
Returns a Posty 1.x compatible slugified version of \fBtext\fP
.UNINDENT
.SS Module contents
.INDENT 0.0
.IP \(bu 2
genindex
.IP \(bu 2
modindex
.IP \(bu 2
search
.UNINDENT
.SH AUTHOR
Nick Pegg
.SH COPYRIGHT
2018, Nick Pegg
.\" Generated by docutils manpage writer.
.
